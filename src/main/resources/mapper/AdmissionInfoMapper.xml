<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.bestsort.e_study.mapper.AdmissionInfoMapper">
  <resultMap id="BaseResultMap" type="cn.bestsort.e_study.pojo.dto.AdmissionInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="policy" jdbcType="VARCHAR" property="policy" />
    <result column="policy_description" jdbcType="VARCHAR" property="policyDescription" />
    <result column="school_year" jdbcType="INTEGER" property="schoolYear" />
    <result column="school_id" jdbcType="BIGINT" property="schoolId" />
    <result column="is_college" jdbcType="TINYINT" property="isCollege" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, score, policy, policy_description, school_year, school_id, is_college
  </sql>
  <select id="selectByExample" parameterType="cn.bestsort.e_study.pojo.dto.AdmissionInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from admission_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from admission_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from admission_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.bestsort.e_study.pojo.dto.AdmissionInfoExample">
    delete from admission_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.bestsort.e_study.pojo.dto.AdmissionInfo">
    insert into admission_info (id, score, policy, 
      policy_description, school_year, school_id, 
      is_college)
    values (#{id,jdbcType=BIGINT}, #{score,jdbcType=INTEGER}, #{policy,jdbcType=VARCHAR}, 
      #{policyDescription,jdbcType=VARCHAR}, #{schoolYear,jdbcType=INTEGER}, #{schoolId,jdbcType=BIGINT}, 
      #{isCollege,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="cn.bestsort.e_study.pojo.dto.AdmissionInfo">
    insert into admission_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="policy != null">
        policy,
      </if>
      <if test="policyDescription != null">
        policy_description,
      </if>
      <if test="schoolYear != null">
        school_year,
      </if>
      <if test="schoolId != null">
        school_id,
      </if>
      <if test="isCollege != null">
        is_college,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="policy != null">
        #{policy,jdbcType=VARCHAR},
      </if>
      <if test="policyDescription != null">
        #{policyDescription,jdbcType=VARCHAR},
      </if>
      <if test="schoolYear != null">
        #{schoolYear,jdbcType=INTEGER},
      </if>
      <if test="schoolId != null">
        #{schoolId,jdbcType=BIGINT},
      </if>
      <if test="isCollege != null">
        #{isCollege,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.bestsort.e_study.pojo.dto.AdmissionInfoExample" resultType="java.lang.Long">
    select count(*) from admission_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update admission_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.policy != null">
        policy = #{record.policy,jdbcType=VARCHAR},
      </if>
      <if test="record.policyDescription != null">
        policy_description = #{record.policyDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.schoolYear != null">
        school_year = #{record.schoolYear,jdbcType=INTEGER},
      </if>
      <if test="record.schoolId != null">
        school_id = #{record.schoolId,jdbcType=BIGINT},
      </if>
      <if test="record.isCollege != null">
        is_college = #{record.isCollege,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update admission_info
    set id = #{record.id,jdbcType=BIGINT},
      score = #{record.score,jdbcType=INTEGER},
      policy = #{record.policy,jdbcType=VARCHAR},
      policy_description = #{record.policyDescription,jdbcType=VARCHAR},
      school_year = #{record.schoolYear,jdbcType=INTEGER},
      school_id = #{record.schoolId,jdbcType=BIGINT},
      is_college = #{record.isCollege,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bestsort.e_study.pojo.dto.AdmissionInfo">
    update admission_info
    <set>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="policy != null">
        policy = #{policy,jdbcType=VARCHAR},
      </if>
      <if test="policyDescription != null">
        policy_description = #{policyDescription,jdbcType=VARCHAR},
      </if>
      <if test="schoolYear != null">
        school_year = #{schoolYear,jdbcType=INTEGER},
      </if>
      <if test="schoolId != null">
        school_id = #{schoolId,jdbcType=BIGINT},
      </if>
      <if test="isCollege != null">
        is_college = #{isCollege,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bestsort.e_study.pojo.dto.AdmissionInfo">
    update admission_info
    set score = #{score,jdbcType=INTEGER},
      policy = #{policy,jdbcType=VARCHAR},
      policy_description = #{policyDescription,jdbcType=VARCHAR},
      school_year = #{schoolYear,jdbcType=INTEGER},
      school_id = #{schoolId,jdbcType=BIGINT},
      is_college = #{isCollege,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>